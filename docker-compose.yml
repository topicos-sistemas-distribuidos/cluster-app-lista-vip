version: '3'
services:
    nginx:
        build:
          dockerfile: ./docker/nginx/nginx.dockerfile
          context: .
        container_name: my-nginx
        image: armandoss/my-nginx
        restart: always
        ports:
          - 80:80
        depends_on: 
          - "app1"
          - "app2"
          - "app3"  
    mydb:
        image: mysql:5.6
        hostname: mydb
        container_name: mydb-server
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: skyinfo
            MYSQL_DATABASE: listavip
        ports:
            - '3306'
        expose:
            # Opens port 3306 on the container
            - '3306'
        networks: 
            - my-app-network

    app1:
        build:
            dockerfile: ./docker/app-server.dockerfile
            context: .
        image: armandoss/app-server
        container_name: app-server-1
        ports:
            - "8081:8081"
        command: mvn clean spring-boot:run -Drun.jvmArguments='-Dserver.port=8081'
        networks: 
            - my-app-network
        depends_on:
            - "mydb"
    app2:
        build:
            dockerfile: ./docker/app-server.dockerfile
            context: .
        image: armandoss/app-server
        container_name: app-server-2
        ports:
            - "8082:8082"
        command: mvn clean spring-boot:run -Drun.jvmArguments='-Dserver.port=8082'
        networks: 
            - my-app-network
        depends_on:
            - "mydb"
    app3:
        build:
            dockerfile: ./docker/app-server.dockerfile
            context: .
        image: armandoss/app-server
        container_name: app-server-3
        ports:
            - "8083:8083"
        command: mvn clean spring-boot:run -Drun.jvmArguments='-Dserver.port=8083'
        networks: 
            - my-app-network
        depends_on:
            - "mydb"

networks: 
    my-app-network:
        driver: bridge